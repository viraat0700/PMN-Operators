{{- if and .Values.nginx.create .Values.nginx.service.legacyEnabled }}
{{ $serviceType := .Values.nginx.service.type }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-clientcert-nginx
  labels:
    app.kubernetes.io/component: nginx-proxy
{{ include "labels" . | indent 4 }}
{{ include "nginx-image-version-label" . | indent 4 }}
{{ include "orc8r-labels" . | indent 4 }}
    {{- with .Values.nginx.service.labels }}
{{ toYaml . | indent 4 }}
    {{- end }}
  annotations:
{{ include "release-name-annotation" . | indent 4 }}
spec:
  selector:
    app.kubernetes.io/component: nginx-proxy
{{ include "selector-labels" . | indent 4 }}
  type: {{ .Values.nginx.service.type }}
  ports:
    {{- with .Values.nginx.service.port.health }}
    - name: health
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- with .Values.nginx.service.port.clientcert }}
    - name: clientcert-legacy
      port: 443
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    - name: clientcert
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ required "Bootstrapping name is required" .Values.nginx.service.name }}
  labels:
    app.kubernetes.io/component: nginx-proxy
{{ include "labels" . | indent 4 }}
{{ include "nginx-image-version-label" . | indent 4 }}
{{ include "orc8r-labels" . | indent 4 }}
    {{- with .Values.nginx.service.labels }}
{{ toYaml . | indent 4 }}
    {{- end }}
  annotations:
{{ include "release-name-annotation" . | indent 4 }}
spec:
  selector:
    app.kubernetes.io/component: nginx-proxy
{{ include "selector-labels" . | indent 4 }}
  type: {{ .Values.nginx.service.type }}
  ports:
    {{- with .Values.nginx.service.port.health }}
    - name: health
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- with .Values.nginx.service.port.open }}
    - name: open-legacy
      port: 443
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    - name: open
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
{{- end }}

{{- if and .Values.nginx.create .Values.nginx.service.enabled }}
{{ $serviceType := .Values.nginx.service.type }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx-proxy
  labels:
    app.kubernetes.io/component: nginx-proxy
{{ include "labels" . | indent 4 }}
{{ include "nginx-image-version-label" . | indent 4 }}
{{ include "orc8r-labels" . | indent 4 }}
    {{- with .Values.nginx.service.labels }}
{{ toYaml . | indent 4 }}
  {{- end }}
  annotations:
{{ include "release-name-annotation" . | indent 4 }}
spec:
  selector:
    app.kubernetes.io/component: nginx-proxy
{{ include "selector-labels" . | indent 4 }}
  type: {{ .Values.nginx.service.type }}
  ports:
    {{- with .Values.nginx.service.port.health }}
    - name: health
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- with .Values.nginx.service.port.clientcert }}
    - name: clientcert
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- with .Values.nginx.service.port.open }}
    - name: open
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- with .Values.nginx.service.port.api }}
    - name: api
      port: {{ .port }}
      targetPort: {{ .targetPort }}
      {{- if (and (eq $serviceType "NodePort") (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
{{- if eq .Values.nginx.service.type "LoadBalancer" }}
  {{- if .Values.nginx.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.nginx.service.loadBalancerIP }}
  {{- end -}}
  {{- if .Values.nginx.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{- range .Values.nginx.service.loadBalancerSourceRanges }}
  - {{ . }}
  {{- end }}
  {{- end -}}
{{- end -}}
{{- end }}



